{% extends "templates/base.html" %}

{% block content %}
  <div x-data="tituloForm()">
    <ol class="breadcrumb mb-2">
      <li class="breadcrumb-item active">{{title}}</li>
    </ol>
    <div class="row">
      <div class="col-12">

        <div class="card-header">
          {{title}}
        </div>

        <div class="card-body">
          <div class="">
            <form>
              <div class="row">
                <div class="col-md-6">
                  <div class="form-group">
                    <label for="descricaoTitulo">Descrição do Título</label>
                    <input type="text" class="form-control" id="descricaoTitulo" required="required" x-model="form.descricaoTitulo" x-bind:disabled="disabled">
                  </div>
                </div>

                <div class="col-md-3">
                  <div class="form-group">
                    <label for="dataVencimentoTitulo">Data de Vencimento</label>
                    <input type="date" class="form-control" id="dataVencimentoTitulo" x-model="form.dataVencimentoTitulo" x-bind:disabled="disabled">
                  </div>
                </div>

                <div class="col-md-3">
                  <div class="form-group">
                    <label for="valorTitulo">Valor do Título</label>
                    <input type="number" step="0.01" class="form-control" id="valorTitulo" x-model="form.valorTitulo" x-bind:disabled="disabled">
                  </div>
                </div>
              </div>

              <button type="button" @click="updateForm()" x-show="!disabled" class="btn btn-primary mt-4">Salvar</button>
              <button type="button" @click="deleteForm()" x-show="!disabled" class="btn btn-danger mt-4">Excluir</button>
              <a href="/titulo/manutTitulo" class="btn btn-info mt-4 ml-2" role="button" aria-disabled="true">Retornar</a>
            </form>

            <div class="mt-3">
              <template x-if="message">
                <div :class="messageClass" x-text="message"></div>
              </template>
            </div>
          </div>
        </div>
      </div>
    </div>

    <script>
      window.onload = function () {
        windowOnLoad();

        const localErro = "{{erro}}";
        if (localErro != "") {
          alert("[vwTitulo|onload] Servidor retornou o erro: " + localErro);
        }
        $("#descricaoTitulo").focus();
      };

      function tituloForm() {
        return {
          form: {
            idTitulo: "{{data.idtitulo}}",
            descricaoTitulo: "{{data.descricaotitulo}}",
            dataVencimentoTitulo: "{{data.datavencimentotitulo}}",
            valorTitulo: "{{data.valortitulo}}",
            removidoTitulo: false,
          },
          message: '',
          messageClass: '',
          disabled: {{disabled}},

          async updateForm() {
            try {
              const response = await fetch('/titulo/updateTitulo', {
                method: 'POST',
                headers: {
                  "Content-Type": "application/json"
                },
                body: JSON.stringify(this.form)
              });

              const result = await response.json();
              if (result.status == "ok") {
                alert("Título atualizado com sucesso");
              } else {
                const errorData = result.status;
                this.message = `Erro! Não foi possível atualizar o título devido ao erro: ${errorData}`;
                this.messageClass = 'alert alert-danger';
              }
            } catch (error) {
              this.message = `Erro de conexão: ${error.message}`;
              this.messageClass = 'alert alert-danger';
            }
          },

          async deleteForm() {
            try {
              const response = await fetch('/titulo/deleteTitulo', {
                method: 'POST',
                headers: {
                  "Content-Type": "application/json"
                },
                body: JSON.stringify({ idtitulo: this.form.idTitulo })
              });

              const result = await response.json();
              if (result.status == "ok") {
                alert("Título excluído com sucesso");
                window.location.href = "/titulo/manutTitulo";
              } else {
                const errorData = result.status;
                this.message = `Erro! Não foi possível excluir o título devido ao erro: ${errorData}`;
                this.messageClass = 'alert alert-danger';
              }
            } catch (error) {
              this.message = `Erro de conexão: ${error.message}`;
              this.messageClass = 'alert alert-danger';
            }
          },

          resetForm() {
            this.form = {
              descricaoTitulo: '',
              dataVencimentoTitulo: '',
              valorTitulo: '',
              removidoTitulo: false,
            };
            this.message = false;
          }
        };
      }
    </script>
{% endblock %}
